$date
	Mon Oct 27 22:06:39 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_cpu $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module uut $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 3 # rs2 [2:0] $end
$var wire 3 $ rs1 [2:0] $end
$var wire 8 % rd_data2 [7:0] $end
$var wire 8 & rd_data1 [7:0] $end
$var wire 3 ' rd [2:0] $end
$var wire 3 ( opcode [2:0] $end
$var wire 8 ) instr [7:0] $end
$var wire 1 * halt $end
$var wire 8 + alu_result [7:0] $end
$var reg 4 , pc [3:0] $end
$scope module alu_inst $end
$var wire 3 - SEL [2:0] $end
$var wire 8 . B [7:0] $end
$var wire 8 / A [7:0] $end
$var reg 8 0 RESULT [7:0] $end
$upscope $end
$scope module cu $end
$var wire 8 1 instr [7:0] $end
$var reg 1 * halt $end
$var reg 3 2 opcode [2:0] $end
$var reg 3 3 rd [2:0] $end
$var reg 3 4 rs1 [2:0] $end
$var reg 3 5 rs2 [2:0] $end
$upscope $end
$scope module mem $end
$var wire 4 6 addr [3:0] $end
$var wire 1 ! clk $end
$var wire 8 7 data_in [7:0] $end
$var wire 1 8 we $end
$var reg 8 9 data_out [7:0] $end
$upscope $end
$scope module rf $end
$var wire 1 ! clk $end
$var wire 3 : rd_addr1 [2:0] $end
$var wire 3 ; rd_addr2 [2:0] $end
$var wire 8 < rd_data1 [7:0] $end
$var wire 8 = rd_data2 [7:0] $end
$var wire 1 > we $end
$var wire 3 ? wr_addr [2:0] $end
$var wire 8 @ wr_data [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx @
bx ?
1>
bx =
bx <
bx ;
bx :
bx 9
08
b0 7
b0 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
b0 ,
bx +
x*
bx )
bx (
bx '
bx &
bx %
bx $
bx #
1"
0!
$end
#5000
0*
b1 #
b1 5
b1 ;
b1 $
b1 4
b1 :
b0 '
b0 3
b0 ?
b0 (
b0 -
b0 2
b1 )
b1 1
b1 9
1!
#10000
0!
0"
#15000
b1 ,
b1 6
1!
#20000
0!
#25000
b11 #
b11 5
b11 ;
b11 $
b11 4
b11 :
b10 '
b10 3
b10 ?
b1 (
b1 -
b1 2
b101011 )
b101011 1
b101011 9
b10 ,
b10 6
1!
#30000
0!
#35000
b1 #
b1 5
b1 ;
b1 $
b1 4
b1 :
b100 '
b100 3
b100 ?
b10 (
b10 -
b10 2
b1010001 )
b1010001 1
b1010001 9
b11 ,
b11 6
1!
#40000
0!
#45000
b10 #
b10 5
b10 ;
b10 $
b10 4
b10 :
b101 '
b101 3
b101 ?
b11 (
b11 -
b11 2
b1110110 )
b1110110 1
b1110110 9
b100 ,
b100 6
1!
#50000
0!
#55000
b0 +
b0 0
b0 @
1*
b0 #
b0 5
b0 ;
b0 $
b0 4
b0 :
b0 '
b0 3
b0 ?
b111 (
b111 -
b111 2
b11100000 )
b11100000 1
b11100000 9
b101 ,
b101 6
1!
#60000
0!
#65000
x*
b0xx #
b0xx 5
b0xx ;
b0xx $
b0xx 4
b0xx :
bx '
bx 3
bx ?
bx (
bx -
bx 2
bx )
bx 1
bx 9
bx &
bx /
bx <
bx %
bx .
bx =
1!
#70000
0!
#75000
1!
#80000
0!
#85000
1!
#90000
0!
#95000
1!
#100000
0!
#105000
1!
#110000
0!
#115000
1!
#120000
0!
#125000
1!
#130000
0!
#135000
1!
#140000
0!
#145000
1!
#150000
0!
#155000
1!
#160000
0!
#165000
1!
#170000
0!
#175000
1!
#180000
0!
#185000
1!
#190000
0!
#195000
1!
#200000
0!
#205000
1!
#210000
0!
